name: CI JSON Checker

on:
    pull_request:
        branches: [main]
        paths:
            - "contributors/*"
    workflow_dispatch:

concurrency:
    group: ${{ github.ref }}-ci-validator

jobs:
    tests:
        name: Tests
        runs-on: ubuntu-latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
            - uses: actions/checkout@v4

            - run: npm install

            - name: Fetch PR information
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: github.event_name == 'pull_request'
              run: |
                  echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
                  echo "PR_AUTHOR_ID=${{ github.event.pull_request.user.id }}" >> $GITHUB_ENV

                  LABELS=$(gh api --jq '[.labels[].name]' /repos/{owner}/{repo}/pulls/${{ github.event.number }})
                  echo "PR_LABELS=$LABELS" >> $GITHUB_ENV

                  FILES=$(gh api --jq '[.[] | select(.status != "removed") | .filename]' /repos/{owner}/{repo}/pulls/${{ github.event.number }}/files)
                  echo "CHANGED_FILES=$FILES" >> $GITHUB_ENV

                  REMOVED_FILE_DATA=$(gh api --jq '[.[] | select(.status == "removed") | {name: .filename, data: .patch}]' /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files)
                  echo "DELETED_FILES=$REMOVED_FILE_DATA" >> $GITHUB_ENV

            - name: Json Validation
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              id: json_validation
              run: npx ava tests/*.test.js --timeout=1m

            # - name: Post PR comment on failure
            #   if: failure()
            #   run: |
            #     gh pr comment ${{ github.event.pull_request.number }} \
            #       --body "‚ùå Validation failed! See test output below:\n\`\`\`\n${{ steps.json_validation.outcome }}\n\`\`\`"

            - name: Congratulate and auto-merge on success
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: success()
              run: |
                gh pr comment ${{ github.event.pull_request.number }} \
                  --body "üéâ Congratulations! All checks passed. Your PR will be auto-merged."
                gh pr edit ${{ github.event.pull_request.number }} --add-label "ready to merge"
                gh pr merge ${{ github.event.pull_request.number }} --auto --merge
